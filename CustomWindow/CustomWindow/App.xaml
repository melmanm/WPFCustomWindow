<Application x:Class="MainWIndowCustom.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converter="clr-namesapce:MainWIndowCustom.Converters,aseembly=MainWIndowCustom"
             xmlns:local="clr-namespace:MainWIndowCustom"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--Thumb as Window boarder using to drag and resize window-->
        <Style x:Key="ThumbStyle" TargetType="Thumb">
            <Style.Resources>
            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid>
                            <Rectangle Stroke="{TemplateBinding BorderBrush}"
                             StrokeThickness = "2.25"
                            Name="Ellipse"
                             Fill="Orange"></Rectangle>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Thumb as Window boarder mode using in full screen mode-->
        <Style x:Key="InvisibleThumbStyle" TargetType="Thumb">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid>
                            <Rectangle Stroke="Transparent"
                             StrokeThickness="0"
                             Name="Ellipse"
                             Fill="Orange"></Rectangle>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Closing button-->
        <Style x:Key="CloseButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="CloseButtonGrid">
                            <Path Name="SignPath" Data="M 13 8 L 22 17 M 13 17 L 22 8" StrokeThickness="2" Stroke="SkyBlue"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="CloseButtonGrid" Property="IsMouseOver" Value="True">
                                <Setter TargetName="CloseButtonGrid" Property="Background" Value="#FFDC5353"/>
                            </Trigger>
                            <Trigger  SourceName="CloseButtonGrid" Property="IsMouseOver" Value="False">
                                <Setter TargetName="CloseButtonGrid" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Minimize button-->
        <Style x:Key="MinimalizeButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="MinButtonGrid">
                            <Path Data="M 13 17 L 22 17" StrokeThickness="2" Stroke="SkyBlue"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="MinButtonGrid" Property="IsMouseOver" Value="True">
                                <Setter TargetName="MinButtonGrid" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger  SourceName="MinButtonGrid" Property="IsMouseOver" Value="False">
                                <Setter TargetName="MinButtonGrid" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Maximize button-->
        <Style x:Key="MaximizeButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="MaxButtonGrid">
                            <Path  Data="M 13 8 L 13 17 L 22 17 L 22 8 L 12 8" StrokeThickness="2" Stroke="SkyBlue"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="MaxButtonGrid" Property="IsMouseOver" Value="True">
                                <Setter TargetName="MaxButtonGrid" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger  SourceName="MaxButtonGrid" Property="IsMouseOver" Value="False">
                                <Setter TargetName="MaxButtonGrid" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Back to normal mode button-->
        <Style x:Key="AlternativeMaximizeButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="MaxButtonGrid">
                            <Path  Data="M 12 11 L 19 11 L 19 17 L 13 17 L 13 11 M 15 8 L 22 8 L 22 14 L 16 14 L 16 8 " StrokeThickness="2" Stroke="SkyBlue"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="MaxButtonGrid" Property="IsMouseOver" Value="True">
                                <Setter TargetName="MaxButtonGrid" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger  SourceName="MaxButtonGrid" Property="IsMouseOver" Value="False">
                            <Setter TargetName="MaxButtonGrid" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Window Style Template-->
        <Style x:Key="CustomMainWindow" 
           TargetType="{x:Type Window}">
            <Setter Property="Foreground" 
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Topmost" Value="True"/>
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <DockPanel>
                            <Border Name="CompensationBorder" BorderThickness="7">
                                <Grid>
                                    <Grid Background="White">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter Grid.Row="1"/>
                                        <Grid Grid.Row="0"  Height="25"  HorizontalAlignment="Stretch" Name="TopBar"  Background="Gray">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="25"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="105"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" Source="{TemplateBinding Icon}" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,0,0,0"/>
                                            <Grid Grid.Column="1" MouseDown="TopBar_MouseDown" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <TextBlock Margin="8,0,0,0" Background="Transparent" Text="{TemplateBinding Title}" Foreground="LightGray" VerticalAlignment="Center"  HorizontalAlignment="Stretch" />
                                            </Grid>
                                            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="2"   >
                                                <Button  Height ="25" Width="35"  Style="{StaticResource MinimalizeButton}" Name = "ButtonMinimalize" Click="ButtonMinimalize_Click"/>
                                                <Button  Height ="25" Width="35"  Name = "ButtonMiaximize" Click="ButtonMiaximize_Click"/>
                                                <Button  Height ="25" Width="35"  Style="{StaticResource CloseButton}" Click="ButtonExit_Click"/>
                                            </DockPanel>
                                        </Grid>
                                    </Grid>
                                    <Thumb  BorderBrush="Orange" Name="ThumbW" DragDelta="ThumbW_DragDelta" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Right" Grid.RowSpan="2" Grid.Row="0"/>
                                    <Thumb  BorderBrush="Orange" Name="ThumbE"  DragDelta="ThumbE_DragDelta" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Left" Grid.RowSpan="2" Grid.Row="0"/>
                                    <Thumb  BorderBrush="Orange" Name="ThumbS"  DragDelta="ThumbS_DragDelta" Cursor="SizeNS" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Row="2"/>
                                    <Thumb  BorderBrush="Orange" Name="ThumbN"  DragDelta="ThumbN_DragDelta" Cursor="SizeNS" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="0"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger  Property="WindowState" Value="Normal">
                                <Setter TargetName="ButtonMiaximize" Property="Style" Value="{StaticResource MaximizeButton}"/>
                                <Setter TargetName="ThumbW" Property="Style" Value="{StaticResource ThumbStyle}"/>
                                <Setter TargetName="ThumbE" Property="Style" Value="{StaticResource ThumbStyle}"/>
                                <Setter TargetName="ThumbN" Property="Style" Value="{StaticResource ThumbStyle}"/>
                                <Setter TargetName="ThumbS" Property="Style" Value="{StaticResource ThumbStyle}"/>
                                <Setter TargetName="CompensationBorder" Property="BorderThickness" Value="0"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.250" Storyboard.TargetName="ThumbW" Storyboard.TargetProperty="Opacity" To="0.3"  From="1"  AutoReverse="True" RepeatBehavior="0:0:2"/>
                                            <DoubleAnimation Duration="0:0:0.250" Storyboard.TargetName="ThumbE" Storyboard.TargetProperty="Opacity" To="0.3"  From="1"  AutoReverse="True" RepeatBehavior="0:0:2"/>
                                            <DoubleAnimation Duration="0:0:0.250" Storyboard.TargetName="ThumbS" Storyboard.TargetProperty="Opacity" To="0.3"  From="1"  AutoReverse="True" RepeatBehavior="0:0:2"/>
                                            <DoubleAnimation Duration="0:0:0.250" Storyboard.TargetName="ThumbN" Storyboard.TargetProperty="Opacity" To="0.3"  From="1"  AutoReverse="True" RepeatBehavior="0:0:2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger  Property="WindowState" Value="Maximized">
                                <Setter TargetName="CompensationBorder" Property="BorderThickness" Value="7"/>
                                <Setter TargetName="ButtonMiaximize" Property="Style" Value="{StaticResource AlternativeMaximizeButton}"/>
                                <Setter TargetName="ThumbW" Property="Style" Value="{StaticResource InvisibleThumbStyle}"/>
                                <Setter TargetName="ThumbE" Property="Style" Value="{StaticResource InvisibleThumbStyle}"/>
                                <Setter TargetName="ThumbN" Property="Style" Value="{StaticResource InvisibleThumbStyle}"/>
                                <Setter TargetName="ThumbS" Property="Style" Value="{StaticResource InvisibleThumbStyle}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
